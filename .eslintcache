[{"D:\\Programming\\Cleveroad\\shop-test\\src\\index.js":"1","D:\\Programming\\Cleveroad\\shop-test\\src\\App.js":"2","D:\\Programming\\Cleveroad\\shop-test\\src\\Authorization.js":"3","D:\\Programming\\Cleveroad\\shop-test\\src\\reportWebVitals.js":"4"},{"size":1000,"mtime":1608630948719,"results":"5","hashOfConfig":"6"},{"size":187,"mtime":1608627259050,"results":"7","hashOfConfig":"6"},{"size":2611,"mtime":1608654497977,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":1608196898209,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"15er9hk",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\Cleveroad\\shop-test\\src\\index.js",[],["21","22"],"D:\\Programming\\Cleveroad\\shop-test\\src\\App.js",[],["23","24"],"D:\\Programming\\Cleveroad\\shop-test\\src\\Authorization.js",["25","26"],"import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\n\r\nlet styles = {\r\n  wrapper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"70vh\",\r\n  },\r\n\r\n  loginForm: {\r\n    width: \"300px\",\r\n  },\r\n};\r\n\r\nexport default function Authorization() {\r\n  const [user, setUser] = useState({ email: \"\", password: \"\" });\r\n\r\n  useEffect(() => {\r\n    const db = firebase.database();\r\n    console.log(db);\r\n  });\r\n\r\n  const inputChange = (event) => {\r\n    setUser((prev) => {\r\n      let id = event.target.id;\r\n      return {\r\n        ...prev,\r\n        [id]: event.target.value,\r\n      };\r\n    });\r\n  };\r\n\r\n  console.log(\"login\", user);\r\n\r\n/*   const signup = (email, password) => {\r\n    return firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        setUser(response.user);\r\n        return response.user;\r\n      });\r\n  }; */\r\n\r\n  const signUp = () => {\r\n    const {email, password} = user\r\n    \r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((response) => {\r\n        setUser(response.user);\r\n        return response.user;\r\n      });\r\n    }\r\n  return (\r\n    <div style={styles.wrapper}>\r\n      <div style={styles.loginForm}>\r\n        <form>\r\n          <h2 className=\"text-center\">Log in</h2>\r\n          <div className=\"form-group\">\r\n            <input\r\n              id=\"email\"\r\n              onChange={inputChange}\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              placeholder=\"email\"\r\n              required=\"required\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              id=\"password\"\r\n              onChange={inputChange}\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n              required=\"required\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block\"\r\n               onSubmit={signUp}\r\n            >\r\n              Log in\r\n            </button>\r\n          </div>\r\n          <div className=\"clearfix\">\r\n            <label className=\"pull-left checkbox-inline\">\r\n              <input type=\"checkbox\" /> Remember me\r\n            </label>\r\n            <a className=\"pull-right\">Forgot Password?</a>\r\n          </div>\r\n        </form>\r\n        <p className=\"text-center\">\r\n          <a>Create an Account</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Programming\\Cleveroad\\shop-test\\src\\reportWebVitals.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"27","replacedBy":"31"},{"ruleId":"29","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":96,"column":13,"nodeType":"35","endLine":96,"endColumn":39},{"ruleId":"33","severity":1,"message":"34","line":100,"column":11,"nodeType":"35","endLine":100,"endColumn":14},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],["36"],["37"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]